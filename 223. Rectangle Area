//这种逻辑上没错，可是会导致溢出。。。。
public class Solution {
    public int computeArea(int A, int B, int C, int D, int E, int F, int G, int H) {
        int area1=(G-E)*(H-F);
        int area2=(D-B)*(C-A);
        int overlap=Math.max((Math.min(C,G)-Math.max(A,E)),0)*Math.max((Math.min(D,H)-Math.max(B,F)),0);//会导致溢出
        return area1+area2-overlap;
        
    }
}
//
public class Solution {
    public int computeArea(int A, int B, int C, int D, int E, int F, int G, int H) {
        int area1=(G-E)*(H-F);
        int area2=(D-B)*(C-A);
    int w1 = Math.min(C, G); 
     int w2=Math.max(A, E);
	int h1 = Math.min(D, H);
	int h2=Math.max(B, F);
	if(w2>=w1||h2>=h1) // you cannot use w2-w1, which may lead to a flow, you have to use if
	return area1+area2;
        int overlap=(w2-w1)*(h2-h1);
        return area1+area2-overlap;
        
    }
}
