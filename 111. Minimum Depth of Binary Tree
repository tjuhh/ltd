/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 需要注意一下，和maximum depth of binary tree不一样,还是很容易写错，因为你需要考虑一边没有的情况，
 这个时候，加的不是0，是另外一边的branch的长度
 
 
 */
 
public class Solution {
    public int minDepth(TreeNode root) {
        if(root==null)
        return 0;
        else if((root.right==null)&(root.left==null))
        return 1;
        else if(root.right==null)
        return minDepth(root.left)+1;
        else if(root.left==null)
        return minDepth(root.right)+1;
        else
        return Math.min(minDepth(root.left),minDepth(root.right))+1;
    }
   
   
   第二次code 更简洁一些
   public class Solution {
    public int minDepth(TreeNode root) {
        if(root==null)
        return 0;
        if(root.left==null)
        return 1+minDepth(root.right);
        if(root.right==null)
        return 1+minDepth(root.left);
        return Math.min(minDepth(root.left),minDepth(root.right))+1;
        
    }
}
}
